name: Reddit Digest

on:
  schedule:
    # Run daily at 16:00 UTC (18:00 CEST)
    - cron: '0 16 * * *'
  workflow_dispatch:  # Allows manual triggering

jobs:
  run-digest:
    runs-on: ubuntu-latest
    env:
      EMAIL_SENDER: ${{secrets.EMAIL_SENDER}}
      EMAIL_RECIPIENT: ${{secrets.EMAIL_RECIPIENT}}
      EMAIL_PASSWORD: ${{secrets.EMAIL_PASSWORD}}
      REDDIT_CLIENT_ID: ${{secrets.REDDIT_CLIENT_ID}}
      REDDIT_CLIENT_SECRET: ${{secrets.REDDIT_CLIENT_SECRET}}
      OPENAI_API_KEY: ${{secrets.OPENAI_API_KEY}}
      USER_TIMEZONE: 'Europe/Berlin'
      # Web search configuration (production-ready defaults)
      WEB_SEARCH_ENABLED: 'true'  # Web search is now stable and enabled
      WEB_SEARCH_TEST_MODE: 'false'
      WEB_SEARCH_DAILY_LIMIT: '12'  # Reasonable daily limit
      WEB_SEARCH_COST_LIMIT: '1.00'  # $1.00 daily limit
      WEB_SEARCH_MIN_SCORE: '20'  # Lower threshold for broader coverage
      WEB_SEARCH_SUBREDDITS: 'SideProject,ClaudeCode,ClaudeAI,AI_Agents'
      WEB_SEARCH_KEYWORDS: 'launched,released,new version,pricing,acquired,funding,announcement,beta,available now,update,feature'
    
    steps:
    - name: Check out repository code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch all history for all branches and tags
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        cache: 'pip'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip list  # List installed packages for debugging

    - name: Verify Environment Variables
      run: |
        if [ -n "$EMAIL_SENDER" ]; then
          echo "EMAIL_SENDER is set"
        else
          echo "EMAIL_SENDER is not set"
        fi
        if [ -n "$EMAIL_RECIPIENT" ]; then
          echo "EMAIL_RECIPIENT is set"
        else
          echo "EMAIL_RECIPIENT is not set"
        fi
        if [ -n "$EMAIL_PASSWORD" ]; then
          echo "EMAIL_PASSWORD is set"
        else
          echo "EMAIL_PASSWORD is not set"
        fi
        
    - name: Verify environment setup
      run: |
        echo "Checking environment variables..."
        if [ -n "$REDDIT_CLIENT_SECRET" ]; then
          echo "REDDIT_CLIENT_SECRET is set"
        else
          echo "REDDIT_CLIENT_SECRET is not set"
        fi
        if [ -n "$EMAIL_PASSWORD" ]; then
          echo "EMAIL_PASSWORD is set"
        else
          echo "EMAIL_PASSWORD is not set"
        fi
        if [ -n "$OPENAI_API_KEY" ]; then
          echo "OPENAI_API_KEY is set"
        else
          echo "OPENAI_API_KEY is not set"
        fi
        
    - name: Pre-check Reddit API
      run: |
        python -c "import praw; import os; print('Checking Reddit API access...'); reddit = praw.Reddit(client_id=os.environ.get('REDDIT_CLIENT_ID'), client_secret=os.environ.get('REDDIT_CLIENT_SECRET'), user_agent='pre-check script'); subreddit = reddit.subreddit('SideProject'); print(f'Found {len(list(subreddit.hot(limit=3)))} posts in r/SideProject'); subreddit = reddit.subreddit('ClaudeCode'); print(f'Found {len(list(subreddit.hot(limit=3)))} posts in r/ClaudeCode'); subreddit = reddit.subreddit('vibecoding'); print(f'Found {len(list(subreddit.hot(limit=3)))} posts in r/vibecoding')"

    - name: Generate test file to confirm subreddit coverage
      run: |
        echo "Testing subreddit availability:" > subreddit_test.log
        python -c "import praw; import os; reddit = praw.Reddit(client_id=os.environ.get('REDDIT_CLIENT_ID'), client_secret=os.environ.get('REDDIT_CLIENT_SECRET'), user_agent='script:reddit-digest-test:v1.0'); sideproject = list(reddit.subreddit('SideProject').hot(limit=1)); claudecode = list(reddit.subreddit('ClaudeCode').hot(limit=1)); vibecoding = list(reddit.subreddit('vibecoding').hot(limit=1)); print(f'Found {len(sideproject)} posts from SideProject, {len(claudecode)} posts from ClaudeCode, and {len(vibecoding)} posts from vibecoding', file=open('subreddit_test.log', 'a'))" || echo "Error testing subreddits" >> subreddit_test.log
        cat subreddit_test.log
        
    - name: Run email script
      run: |
        echo "Running from directory: $(pwd)"
        echo "Current git commit: $(git rev-parse HEAD)"
        echo "Latest code for format_email_content:"
        grep -A 20 "def format_email_content" src/reddit_email.py
        echo "\nChecking for username/emoji handling in comment summarization:"
        grep -A 5 "DO NOT include usernames" src/reddit_email.py
        
        # Run the email script
        python src/reddit_email.py --run-once
      env:
        # Only add variables not set at the job level
        REDDIT_USER_AGENT: "GitHub Actions: Reddit Digest Bot"
        SMTP_SERVER: 'smtp.gmail.com'
        SMTP_PORT: '587'
        
    - name: Check output files
      if: always()
      run: |
        echo "=== Email HTML Content Length ==="
        if [ -f "last_email_content.html" ]; then
          wc -l last_email_content.html
          grep -i "sideproject\|claudecode" last_email_content.html | wc -l
          echo "Sample of HTML content:"
          head -n 20 last_email_content.html
        else
          echo "No HTML content generated"
        fi
        
        echo "\n=== Subreddit Data ==="
        if [ -f "subreddit_data.txt" ]; then
          cat subreddit_data.txt
        else
          echo "No subreddit data file found"
        fi

